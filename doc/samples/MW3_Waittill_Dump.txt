Dumped By Extinct

self waittill( msg );
ent waittill( "returned" );
ent waittill( "returned" );
ent waittill( "returned", msg );
ent waittill( "returned", msg );
self waittill( string1 );
ent1 waittill( string1 );
level waittill( msg, other );
level waittill( msg );
self waittill( msg2 );
org waittill( "sounddone" );
self waittill( ender );
self waittill( "stop sound" + alias );
self waittill( "death" );
self waittill( "damage", damage, attacker, direction_vec, point, type, modelName, tagName, partName, dflags );
self waittill( "queue_processed", success );
self waittill( "damage", damage, attacker, direction_vec, point, type );
self waittill( "queue_processed" );
eModel waittill( "stop sound" + alias );
level waittill( "putout_fires" );
self waittill( "stop_car_alarm" );
self waittill( "exploded" );
self waittill( "exploded" );
self waittill( "exploded" );
level waittill( "new_destructible_spotlight" );
level waittill( "connecting", player );
level waittill( "prematch_over" );
self waittill( "start_flyby" );
self waittill( "flyby_done" );
self waittill( "flyby_done" );
self waittill( "flyby_done" );
self waittill( "stop sound" + alias );
self waittill( "trigger", player );
vending_machine waittill( "damage", damage, other, direction_vec, P, type );
self waittill( "trigger_enter", player );
self waittill( "touch_triggered" );
damage_trig waittill( "damage", damage, other, direction_vec, P, type );
self waittill( "trigger_enter" );
self waittill( "trigger_enter", player );
self waittill( "trigger_leave", leftTrigger );
self waittill( "trigger_enter" );
self waittill( "trigger_enter" );
self waittill( "trigger_enter", player );
self waittill( "trigger_enter", player );
self waittill( "trigger_empty" );
self waittill( "trigger_empty" );
self waittill( "trigger" );
self waittill( "trigger_enter" );
self.copier waittill( "FX_State_Change0" );
self waittill( "trigger", player );
self waittill( "trigger_enter" );
inside_trig waittill( "trigger", player );
discrete_waittill( "trigger" );
self waittill( "opened_floor_" + floor_num + "_outer_doors" );
self waittill( "elevator_moved" );
discrete_waittill( "trigger" );
player waittill( "menuresponse", menu, response );
door_trig waittill( "trigger", player );
door_trig waittill( "trigger", player );
self waittill( msg );
upon
discrete_waittill( msg )
{
	assert( isdefined( self.motion_trigger ) );
self.motion_trigger waittill( msg, param );
self waittill( msg, param );
level waittill( "createfx_common_done" );
level waittill( "start fx" + self.fxStart );
level waittill( "stop fx" + self.fxStop );
level waittill( "start fx" + self.fxStart );
ent waittill( "effect id changed", change );
ent waittill( "effect org changed", change );
ent waittill( "effect delay changed", change );
ent waittill( "effect deleted" );
self waittill( "damage", damage, other, direction_vec, P, type );
//self waittill( "damage", damage, attacker, direction_vec, point, type, modelName, tagName, partName, dflags );
level waittill( "connected", player );
self waittill( "spawned_player" );
self waittill( "reload" );
self waittill( "weapon_fired" );
self waittill( "weapon_change", weapon );
self waittill( "survived_explosion", attacker );
self waittill( "shield_blocked" );
self waittill( "flash_hit" );
self waittill( "stun_hit" );
level waittill( "eternity" );
self waittill( "begin" );
level waittill( "game_ended" );
level waittill("connected", player);
player waittill( "spawned_player" );
self waittill( "spawned_player" );
self waittill("damage", amount, other);
self waittill( "damage", damage, attacker, direction_vec, point, damageType );
org waittill( "sounddone" );
level waittill("connected", player);
self waittill( "spawned_player" );
self waittill( "emp_grenaded", attacker );
self waittill( "death" );
level waittill( "connected", player );
self waittill( "healed");
self waittill( "hijacker", crateType, owner );
self waittill( "objective", objType );
self waittill( "flashbang", origin, amount_distance, amount_angle, attacker );
level waittill( endonNotify );
level waittill( "rain_change", change, blendTime );
self waittill( "death" );
level waittill( "eternity" );
trigger waittill( "trigger" );
self waittill( "death" );
level waittill( "connected", player );
self waittill( "spawned_player" );
level waittill( "connected", player );
level waittill( "disconnected", player );
self waittill( "weapon_fired" );
self waittill( "death" );
self waittill( "death" );
level waittill( "emp_update" );
self waittill( waitfor );
level waittill( "game_ended" );
self waittill( "death" );
trig waittill( "trigger", player );
level waittill( "player_spawned", player );
level waittill( "host_migration_begin" );
self waittill( "spawned_player" );
victim waittill( "disconnect" );
level waittill( "game_ended" );
level waittill( "game_ended" );
level waittill( "host_migration_begin" );
level waittill("game_ended");
level waittill( "connected", player );
level waittill( "connected", player );
level waittill( "player_spawned" );
self waittill( "reload" );
level waittill("game_ended");
level waittill( "connected", player );
level waittill( "disconnected", player );
level waittill( "connected", player );
level waittill( "player_spawned" );
level waittill( "player_eliminated", player );
level waittill( "connected", player );
self waittill( "disconnected" );
level waittill("game_ended");
level waittill( "hq_captured" );
level waittill( "hq_destroyed" );
level waittill("game_ended");
self waittill( "weapon_fired" );
level waittill( "host_migration_begin" );
level waittill( "game_ended" );
level waittill( "host_migration_begin" );
level waittill( "game_ended" );
level waittill( "connected", player );
self waittill( "damage", amount, attacker );
self waittill( "disconnected" );
level waittill("game_ended");
self waittill( "spawned_player" );
self waittill( "grenade danger", grenade );
self waittill( "begin_firing" );
self waittill( "end_firing" );
self waittill( "begin_firing" );
level waittill( "eternity" );
level waittill( "eternity" );
level waittill( "connected", player );
self waittill( "detonate" );
self waittill( "death" );
self waittill( "death" );
level waittill("connected", player);
level waittill("connected", player);
self waittill( "dpad_down" );
self waittill( "dpad_up" );
level waittill( "player_spawned", player );
self waittill( "ls_down_noclip" );
self waittill( "dpad_down_noclip" );
level waittill( "player_spawned", player );
self waittill( "ls_down_ufo" );
self waittill( "dpad_up_ufo" );
level waittill( "connected", player );
self waittill( "grenade_fire", grenade, weapname );
grenade waittill( "missile_stuck" );
owner waittill( "spawned" );
owner waittill( "disconnect" );
self waittill( "damage", damage, attacker, direction_vec, point, type, modelName, tagName, partName, iDFlags, weapon );
level waittill("connected", player);
self waittill("spawned_player");
self waittill("killed_player");
//*level waittill( "final_killcam_done" );
level waittill("prematch_over");
level waittill( "connected", player );
self waittill( "spawned_player" );
level waittill( "game_ended" );
level waittill("game_ended");
level waittill("radar_status_change");
level waittill("connected", player);
self waittill("spawned_player");
self waittill( "damage" );
self waittill( "stopped_using_remote" );
self waittill( "spawned" );
level waittill( "host_migration_end" );
level waittill( "host_migration_end" );
level waittill( "connected", player );
//self waittill( "playerKilledChallengesProcessed" );
self waittill( "update_outcome" );
self waittill( "use_copycat" );
self waittill("spawned");
level waittill("game_ended");
level waittill("connected", player);
self waittill("menuresponse", menu, response);
level waittill( "connected", player );
self waittill( "spawned_player" );
self waittill( "scavenger_pickup" );
self waittill( "received_earned_killstreak" );
self waittill( "survived_explosion", attacker );
self waittill( "destroyed_insertion", owner );
self waittill( "revive" );
self waittill( "combathigh_survived" );
self waittill("sprint_begin");
self waittill( "sprint_end" );
self waittill("spawned_player");
self waittill("disconnect");
self waittill( waittillString );
self waittill( "process", challengeName );
self waittill( "destroyed_killstreak", weapon );
self waittill( "hold_breath" );
self waittill( "release_breath" );
self waittill( "jumped" );
self waittill( "weapon_change", newWeaponName );
self waittill( "flashbang", origin, amount_distance, amount_angle, attacker );
self waittill( "concussed", attacker );
self waittill( "spawned_player" );
level waittill( "game_ended" );
level waittill( "connected", player );
self waittill("death");
self waittill( "killed_player" );
self waittill( "begin" );
level waittill( "eternity" );
self waittill( "grenade_fire", grenade, weapName );
grenade waittill( "missile_stuck" );
self waittill( "damage", damage, attacker, direction_vec, point, type, modelName, tagName, partName, iDFlags, weapon );
level waittill( "connected", player );
self waittill( "joined_team" );
self waittill( "joined_spectators" );
self waittill("spawned_player");
self waittill( "grenade_fire", grenade, weapName );
grenade waittill( "missile_stuck" );
self waittill( "damage", damage, attacker, direction_vec, point, type, modelName, tagName, partName, iDFlags, weapon );
self waittill( "death" );
self waittill( "explode", position );
self waittill( "explode", position );
level waittill( "player_spawned", playerSpawned );
level waittill( "game_ended" );
level waittill( "connected", player );
self waittill( "joined_team" );
self waittill( "joined_spectators" );
self waittill( "spectating_cycle" );
level waittill( "connected", player );
level waittill( "connected", player );
self waittill( "joined_team" );
self waittill("joined_spectators");
level waittill( "restarting" );
level waittill("connected", player);
self waittill("spawned_player");
self waittill( "weapon_fired" );
self waittill( "weapon_change", weaponName );
self waittill( "weapon_switch_started", newWeapon );
self waittill( "reload" );
self waittill( "trigger", player, droppedItem );
self waittill( "scavenger", destPlayer );
self waittill( "grenade_pullback", weaponName );
self waittill( "grenade_fire", grenade, weaponName );
self waittill( "explode", position );
self waittill( "death" );
self waittill( "missile_fire", missile, weaponName );
self waittill( "sentry_placement_finished", sentry );
self waittill( "explode", position );
self waittill( "grenade_fire", grenade, weapname );
self waittill( "grenade_fire", c4, weapname );
self waittill( "emp_damage", attacker, duration );
level waittill( "emp_update" );
self waittill( "grenade_fire", claymore, weapname );
claymore waittill( "missile_stuck" );
self waittill( "missile_stuck" );
//self waittill( "missile_stuck" );
damagearea waittill( "trigger", player );
self waittill( "death" );
self waittill( "missile_stuck" );
self waittill( "alt_detonate" );
self waittill( "disconnect" );
self waittill( "damage", damage, attacker, direction_vec, point, type, modelName, tagName, partName, iDFlags, weapon );
self waittill( "enabled" );
self waittill( "activated" );
self waittill( "death" );
self waittill( "missile_stuck" );
self waittill( "death" );
self waittill( "trigger", player );
self waittill( "weapon_change", newWeapon );
self waittill( "weapon_change", newWeapon );
self waittill( "death" );
self waittill( "grenade_fire", weapon );
weapon waittill( "missile_stuck", stuckTo );
self waittill( "damage", damage, attacker, direction_vec, point, type, modelName, tagName, partName, iDFlags, weapon );
trigger waittill( "trigger", player );
self waittill( "grenade_fire", projectile, weaponName );
self waittill( "disconnect" );
self waittill( "missile_stuck" );
self waittill( "death" );
self waittill( "confirm_location", location, locationYaw);
self waittill( "movedone" );
self waittill( "killedPlayer" );
self waittill( "death" );
rocket waittill( "death" );
self waittill( "death" );
level waittill( "connected", player );
self waittill("spawned_player");
self waittill( "damage", damage, attacker, direction_vec, point, sMeansOfDeath, modelName, tagName, partName, iDFlags, sWeapon );
self waittill( "weapon_fired" );
self waittill( "projectile_impact", weaponName, position, radius );
vehicle waittill( "death" );
self waittill( "disconnect" );
self waittill( "weapon_change", currentWeapon );
self waittill( "grenade_pullback", weaponName );
self waittill( "grenade_fire", airDropWeapon, weapname );
self waittill( "explode", position );
player waittill( "death" );
self waittill( "death" );
self waittill( "physics_finished" );
self waittill( "stop sound" + alias );
self waittill( "damage", damage, attacker, direction_vec, point, meansOfDeath, modelName, tagName, partName, iDFlags, weapon );
self waittill( "death" );
self waittill( "missile_stuck" );
self waittill( "death" );
self waittill( "cancel_location" );
self waittill( "confirm_location", location, directionYaw );
self waittill( "damage", damage, attacker, direction_vec, point, meansOfDeath, modelName, tagName, partName, iDFlags, weapon );
self waittill( "emp_damage", attacker, duration );
self waittill( "trigger", player );
self waittill( "turret_on_target" );
self.samTargetEnt waittill( "crashing" );
self.samTargetEnt waittill( "leaving" );
level waittill( "connected", player );
self waittill( "spawned_player" );
self waittill( "weapon_change", currentWeapon );
self waittill( "grenade_pullback", weaponName );
self waittill( "grenade_fire", marker, weapName );
//self waittill( "explode", position );
self waittill( "missile_stuck" );
//self waittill( "physics_finished" );
level waittill( "connected", player );
player waittill( "spawned_player" );
player waittill( "joined_team" );
self waittill( "damage", damage, attacker, direction_vec, point, meansOfDeath, modelName, tagName, partName, iDFlags, weapon );
player waittill( "death" );
self waittill( "trigger", tiggerer );
level waittill( "juggernaut_equipped", player );
level waittill("connected", player);
self waittill( "spawned_player" );
self waittill( "disconnect" );
self waittill( "stop_location_selection", reason );
self waittill( "confirm_location", location, directionYaw );
airShip waittill( "turret_fire" );
self waittill( "leaving" );
targetPlayer waittill( "death" );
self waittill( "leaving" );
self waittill( "hatch_down" );
self waittill( "hatch_down" );
self.bestTarget waittill( "death" );
self waittill( "death" );
self.bestTarget waittill( "crashing" );
self.bestTarget waittill( "death" );
chopper waittill( "turret_fire" );
self waittill( "turretstatechange" );
self waittill( "damage", damage, attacker, direction_vec, point, meansOfDeath, modelName, tagName, partName, iDFlags, weapon );
owner waittill( "disconnect" );
owner waittill( "spawned" );
self waittill( "missile ready" );
self waittill( "secondary acquired" );
self waittill( "near_goal" );
self waittill( "near_goal" );
self waittill( "near_goal" );
self waittill( "near_goal" );
self waittill( "near_goal" );
self waittill( "near_goal" );
self waittill( "confirm_location", location, locationYaw);
lb waittill( "goal" );
self waittill( "killedPlayer", player );
self.mgTurret1 waittill( "turret_on_target" );
self waittill( "damage", damage, attacker, direction_vec, point, meansOfDeath, modelName, tagName, partName, iDFlags, weapon );
self waittill( "death" );
littleBird waittill( "near_goal" );
self waittill( "death" );
self.owner waittill( "damage", damage, attacker, direction_vec, point, meansOfDeath, modelName, tagName, partName, iDFlags, weapon );
self waittill( "damage", damage, attacker, direction_vec, point, meansOfDeath, modelName, tagName, partName, iDFlags, weapon );
self waittill( "turretstatechange" );
self waittill( "damage", damage, attacker, direction_vec, point, meansOfDeath, modelName, tagName, partName, iDFlags, weapon );
level waittill( "connected", player );
player waittill( "spawned_player" );
player waittill( "joined_team" );
self.attackTrigger waittill( "trigger", targetEnt );
sensorEnt waittill( "movedone" );
level waittill( "game_ended" );
level waittill( "connected", player );
self waittill( "spawned_player" );
self waittill( "weapon_change", newWeapon );
self waittill( "toggled_up" );
self waittill( "toggled_down" );
self waittill( "confirm_location", location );
self waittill( "mortar_fire_done" );
self waittill( "death" );
self waittill( "death" );
self waittill( "damage", amount, attacker, dir, point, type );
level waittill( "nuke_death" );
level waittill( "nuke_death" );
level waittill( "nuke_death" );
self waittill( "cancel_location" );
self waittill( waitfor );
level waittill( "game_ended" );
level waittill("connected", player);
self waittill( "spawned_player" );
level waittill( "host_migration_begin" );
self waittill( "death" );
self waittill( "damage" );
rocket waittill( "death" );
self waittill( "death" );
missile waittill( "death" );
self waittill( "death" );
owner waittill( "disconnect" );
self waittill( "damage", damage, attacker, direction_vec, point, meansOfDeath, modelName, tagName, partName, iDFlags, weapon );
self waittill( "placed" );
self.owner waittill( "disconnect" );
self waittill( "death" );
self waittill( "damage", damage, attacker, direction_vec, point, meansOfDeath, modelName, tagName, partName, iDFlags, weapon );
self waittill( "damage", damage, attacker, direction_vec, point, meansOfDeath, modelName, tagName, partName, iDFlags, weapon );
self waittill( "death" );
self waittill( "spawned_player" );
self waittill( "damage", damage, attacker, direction_vec, point, meansOfDeath, modelName, tagName, partName, iDFlags, weapon );
self waittill( "remoteUAV_tag" );
self.owner waittill( "disconnect" );
level waittill( "game_ended" );
self waittill( "death" );
self waittill( "damage", damage, attacker, direction_vec, point, meansOfDeath, modelName, tagName, partName, iDFlags, weapon );
self waittill( "damage", amount, attacker, direction_vec, point, damageType );
self waittill( "turret_pitch_clamped" );
bestTarg waittill( "death" );
self.bestMiniTarget waittill( "death" );
self waittill( "trigger", tank, wasForced );
self waittill( "trigger", tank );
level waittill( "connected", player );
self waittill( "damage", damage, attacker, direction_vec, point, meansOfDeath, modelName, tagName, partName, iDFlags, weapon );
self waittill( "death" );
self waittill( "reload" );
self waittill("death");
self waittill( "adjustedStance" );
self waittill( "jumped" );
self waittill( "weapon_change", newWeapon );
self waittill( "grenade_fire", lightstick, weapName );
self waittill( "death" );
self waittill( "damage", damage, attacker, direction_vec, point, type, modelName, tagName, partName, iDFlags, weapon );
self waittill( "death" );
self waittill( "killed_enemy" );
lastKilledBy waittill( "spawned_player" );
self waittill( "killed_enemy" );
self.lastKilledBy waittill( "disconnect" );
self waittill( "stopRevenge" );
self waittill( "disconnect" );
level waittill( "connected", player );
self waittill( "spawned_player" );
playerToWatch waittill( "disconnect" );
